# Generated by Django 5.2.4 on 2025-08-02 01:34

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('Payment', '0003_initial'),
        ('Provider', '0002_initial'),
        ('Services', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='serviceprovider',
            name='services_offered',
            field=models.ManyToManyField(blank=True, related_name='service_providers', to='Services.services'),
        ),
        migrations.AlterField(
            model_name='serviceprovider',
            name='payment_methods',
            field=models.ManyToManyField(blank=True, related_name='service_providers', to='Payment.paymentmethod'),
        ),
        migrations.AlterField(
            model_name='serviceprovider',
            name='service_categories',
            field=models.ManyToManyField(related_name='service_providers', to='Services.servicecategory', verbose_name='Service Categories'),
        ),
        migrations.CreateModel(
            name='ServiceProviderAddress',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('address_type', models.CharField(choices=[('home', 'Home Address'), ('business', 'Business Address'), ('non_uk', 'Non-UK Address'), ('registered', 'Registered Business Address'), ('operational', 'Operational Address'), ('billing', 'Billing Address'), ('correspondence', 'Correspondence Address')], default='home', max_length=20)),
                ('address_line_1', models.CharField(help_text='Street address, building number, etc.', max_length=255, verbose_name='Address Line 1')),
                ('address_line_2', models.CharField(blank=True, help_text='Apartment, suite, unit, etc.', max_length=255, verbose_name='Address Line 2')),
                ('city', models.CharField(help_text='City or town', max_length=100, verbose_name='City')),
                ('postcode', models.CharField(help_text='Postal/ZIP code', max_length=20, verbose_name='Postcode')),
                ('state', models.CharField(blank=True, max_length=100, verbose_name='State/County/Province')),
                ('country', models.CharField(default='United Kingdom', help_text='Country', max_length=100, verbose_name='Country')),
                ('business_name', models.CharField(blank=True, help_text='Business name for this address', max_length=200, verbose_name='Business Name')),
                ('is_primary', models.BooleanField(default=False, help_text='Mark as primary address for this provider')),
                ('is_verified', models.BooleanField(default=False, help_text='Address has been verified')),
                ('is_active', models.BooleanField(default=True, help_text='Address is currently active')),
                ('verification_date', models.DateTimeField(blank=True, help_text='Date when address was verified', null=True)),
                ('verification_method', models.CharField(blank=True, choices=[('postcode_lookup', 'Postcode Lookup'), ('manual_verification', 'Manual Verification'), ('document_upload', 'Document Upload'), ('third_party', 'Third Party Verification')], help_text='Method used to verify this address', max_length=50)),
                ('notes', models.TextField(blank=True, help_text='Additional notes about this address')),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to='Provider.serviceprovider')),
            ],
            options={
                'verbose_name': 'Service Provider Address',
                'verbose_name_plural': 'Service Provider Addresses',
                'db_table': 'service_provider_address',
                'ordering': ['-is_primary', 'address_type', 'city'],
                'managed': True,
                'indexes': [models.Index(fields=['address_type'], name='service_pro_address_e199d9_idx'), models.Index(fields=['is_primary'], name='service_pro_is_prim_183dfe_idx'), models.Index(fields=['is_verified'], name='service_pro_is_veri_032e0e_idx'), models.Index(fields=['country'], name='service_pro_country_525d5b_idx')],
                'unique_together': {('provider', 'address_type', 'address_line_1', 'city', 'postcode')},
            },
        ),
    ]
